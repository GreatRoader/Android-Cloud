apply plugin: 'java-library'

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.annotation:annotation:1.1.0'
}

sourceCompatibility = "7"
targetCompatibility = "7"


ext {
    bintrayName = 'cloud-base'
    artifact = bintrayName
    libraryName = 'Android cloud sdk'
    libraryDescription = 'The perfect framework for Android'
    libraryVersion = cloud_base_version
}

apply from: '../install.gradle'
apply from: '../bintray.gradle'


//apply plugin: 'maven'
//uploadArchives {
//    repositories.mavenDeployer {
//        def mavenDirPath = file(project.buildDir) // 本地存放目录(自行选择)，可放在gradle.properties文件中引用
//        repository(url: "file://${mavenDirPath.absolutePath}/sdk") // 必须双引号，单引号不会转义$
//        pom.project {
//            groupId "com.example.maven.test" // 可以随意取，一般取包名
//            artifactId "meaventest" // 可以随意取，一般取库的名字
//            version "1.0.1-SNAPSHOT" // 版本号
//        }
//    }
//}



////必须引入这2个插件
//apply plugin : 'com.github.dcendents.android-maven'
//apply plugin : 'com.jfrog.bintray'
//
//def siteUrl =  'https://github.com/cangHW/Android-Cloud'
//def gitUrl = 'https://github.com/cangHW/Android-Cloud.git'
//
//// This is the library version used when deploying the artifact
//group = "com.cloud.service"
//version = "0.0.1" //PROJ_VERSION 替换成自己的的版本号
//artifactId = ""
//
//install {
//    repositories.mavenInstaller {
//        // This generates POM.xml with proper parameters
//        pom {
//            project {
//                packaging 'aar'
//                description "The perfect framework for Android" //替换成自己的工程描述
//
//                // Add your description here
//                name "android-cloud"  //替换成自己的工程名称
//                url siteUrl //替换成自己的工程网络地址，例如github中发布的源码地址
//
//                // Set your license
//                licenses {
//                    license {
//                        name 'The Apache Software License, Version 2.0'
//                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
//                    }
//                }
//
//                developers {
//                    developer {
//                        id 'cangHX' //替换成自己的id
//                        name 'cangHX' //替换成自己的名字
//                        email 'cwqcanghaixiao@163.com' //替换成自己的邮箱
//                    }
//                }
//                scm {
//                    connection PROJ_VCSURL //替换成自己的Git仓库地址。
//                    developerConnection PROJ_VCSURL //替换成自己的Git仓库地址。
//                    url PROJ_WEBSITEURL //替换成自己的项目主页。
//                }
//
//                dependencies{
//                    dependency{
//                        groupId group
//                        version version
//                        artifactId artifactId
//                        scope "compile"
//                    }
//
//                }
//            }
//        }
//    }
//}
//
//task sourcesJar(type : Jar) { //这个task不需要修改，发布内容为jar类型
//    classifier = 'sources'
//}
//
//task javadoc(type : Javadoc) { //这里不需要修改，发布的有javaDoc
//    source = android.sourceSets.main.java.srcDirs
//    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//    failOnError = false
//}
//
//task javadocJar(type : Jar, dependsOn : javadoc) { //这里也不需要修改
//    classifier = 'javadoc'
//    from javadoc.destinationDir
//}
//
//artifacts { //这里不需要修改，发布内容包括javadocJar和sourcesJar
//    archives javadocJar
//    archives sourcesJar
//}
//Properties properties = new Properties()
//properties.load(project.rootProject.file('local.properties').newDataInputStream())
//
//bintray {
//    user = properties.getProperty("bintray.user")
//    key = properties.getProperty("bintray.apikey")
//
//    configurations = ['archives']
//    pkg {
//        repo = "maven"
//        name = PROJ_NAME //替换成自己的
//        websiteUrl = PROJ_WEBSITEURL //替换成自己的
//        vcsUrl = PROJ_VCSURL  //替换成自己的
//        licenses = ["Apache-2.0"]
//        //userOrg = "angryboby" //组织名称，换成自己的
//        publish = true //这个必须设置为true，默认为false只有这样才能发布
//        version {
//            desc = PROJ_DESCRIPTION //替换成自己的
//            //gpg的配置是在为jcenter自动上传到mavenCenter做准备，没有本签名配置无法将包同步到mavenCenter,因为只有经过签名的包才允许上传到maveCenter.
//            gpg {
//                sign = true //Determines whether to GPG sign the files. The default is false
//                passphrase = properties.getProperty("bintray.gpg.password")
//                //注意，这里是在生成mavenCenter公钥和密钥时候的密码，后面后解释
//            }
//        }
//    }
//}